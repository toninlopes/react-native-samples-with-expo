// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item When there are row and separator. 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingVertical": 20,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 22,
          }
        }
      >
        Title
      </Text>
    </View>
  </View>
  <View
    style={
      [
        {
          "flex": 1,
        },
        {
          "borderColor": "silver",
          "borderStyle": "dashed",
          "borderWidth": 0.8,
        },
      ]
    }
  />
</View>
`;

exports[`Item When there are row, title, chevron and separator. 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingVertical": 20,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 22,
          }
        }
      >
        Title
      </Text>
    </View>
    <View
      style={{}}
    >
      <Text />
    </View>
  </View>
  <View
    style={
      [
        {
          "flex": 1,
        },
        {
          "borderColor": "silver",
          "borderStyle": "dashed",
          "borderWidth": 0.8,
        },
      ]
    }
  />
</View>
`;

exports[`Item When there is none child. 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
/>
`;

exports[`Item When there is row as child. 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "paddingVertical": 20,
      }
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <Text
        style={
          {
            "fontSize": 22,
          }
        }
      >
        Title
      </Text>
    </View>
  </View>
</View>
`;
